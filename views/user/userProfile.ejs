<%-include('../partials/userHeader.ejs') %>
<!-- Breadcrumb Section Begin -->
<section
  class="breadcrumb-section set-bg"
  data-setbg="../../images/vegetables4_b72-.jpg"
>
  <div class="container">
    <div class="row">
      <div class="col-lg-12 text-center">
        <div class="breadcrumb__text">
          <h2>User Profile</h2>
          <div class="breadcrumb__option">
            <a href="#">Home</a>
            <span>User Profile</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<!-- Breadcrumb Section End -->

<div class="container mt-5">
  <div class="row">
    <%-include('../partials/userProfileSidebar.ejs') %>

    <!-- Profile Settings-->
    <div class="col-lg-8 pb-5">
      <h3 style="font-weight: 600">Profile</h3>
      <hr class="mt-2 mb-3" />
      <form class="row" id="userProfileUpdateForm">
        <div class="col-md-6">
          <div class="form-group form-control2">
            <label for="account-fn">First Name</label>
            <input
              onkeyup="checkUserProfileUpdate()"
              class="form-control2"
              type="text"
              id="account-fn"
              value="<%=userRole.name%>"
              name="name"
              required=""
            />
            <i class="fas fa-check-circle"></i>
            <i class="fas fa-exclamation-circle"></i>
            <small>Error message</small>
          </div>
        </div>
        <div class="col-md-6">
          <div class="form-group form-control2">
            <label for="account-ln">Last Name</label>
            <input
              onkeyup="checkUserProfileUpdate()"
              class="form-control2"
              type="text"
              id="account-ln"
              value="<%=userRole.lastName%>"
              name="lastName"
              required=""
            />
            <i class="fas fa-check-circle"></i>
            <i class="fas fa-exclamation-circle"></i>
            <small>Error message</small>
          </div>
        </div>
        <div class="col-md-6">
          <div class="form-group">
            <label for="account-email">E-mail Address</label>
            <input
              class="form-control"
              type="email"
              id="account-email"
              value="<%=userRole.email%>"
              disabled=""
            />
          </div>
        </div>
        <div class="col-md-6">
          <div class="form-group">
            <label for="account-phone">Phone Number</label>
            <input
              class="form-control"
              type="text"
              id="account-phone"
              value="<%=userRole.phoneNumber%>"
              disabled=""
            />
          </div>
        </div>
      </form>

      <br />

      <div class="col-12">
        <div
          class="d-flex flex-wrap justify-content-between align-items-center"
        >
          <button
            onclick="userProfileUpdateButton ()"
            class="btn btn-style-1 btn-success"
            type="button"
            data-toast=""
            data-toast-position="topRight"
            data-toast-type="success"
            data-toast-icon="fe-icon-check-circle"
            data-toast-title="Success!"
            data-toast-message="Your profile updated successfuly."
          >
            Update Profile
          </button>
        </div>
      </div>
      <br />

      <h3 style="font-weight: 600">Change Password</h3>
      <hr class="mt-2 mb-3" />
      <form class="row" id="userProfilePasswordUpdateForm">
        <div class="col-md-6">
          <div class="form-group form-control2">
            <label for="account-pass">Old Password</label>
            <input
              onkeyup="checkProfilePassword ()"
              class="form-control2"
              type="password"
              name="oldPassword"
              id="account-oldpass"
            />
            <i class="fas fa-check-circle"></i>
            <i class="fas fa-exclamation-circle"></i>
            <small>Error message</small>
          </div>
        </div>
        <div class="col-md-6"></div>

        <div class="col-md-6">
          <div class="form-group form-control2">
            <label for="account-pass">New Password</label>
            <input
              onkeyup="checkProfilePassword ()"
              class="form-control2"
              type="password"
              name="password"
              id="account-pass"
            />
            <i class="fas fa-check-circle"></i>
            <i class="fas fa-exclamation-circle"></i>
            <small>Error message</small>
          </div>
        </div>
        <div class="col-md-6">
          <div class="form-group form-control2">
            <label for="account-confirm-pass">Confirm Password</label>
            <input
              class="form-control2"
              type="password"
              id="account-confirm-pass"
            />
            <i class="fas fa-check-circle"></i>
            <i class="fas fa-exclamation-circle"></i>
            <small>Error message</small>
          </div>
        </div>
      </form>

      <div class="col-12">
        <div
          class="d-flex flex-wrap justify-content-between align-items-center"
        >
          <button
            onclick="userProfilePasswordUpdateButton ()"
            class="btn btn-style-1 btn-success"
            type="button"
            data-toast=""
            data-toast-position="topRight"
            data-toast-type="success"
            data-toast-icon="fe-icon-check-circle"
            data-toast-title="Success!"
            data-toast-message="Your profile updated successfuly."
          >
            Update Password
          </button>
        </div>
      </div>
    </div>
  </div>
</div>
<!-- Footer Section Begin -->
<%-include('../partials/userFooter.ejs') %>

<script>
  const passwordreal = document.getElementById("account-pass");
  const passwordconfirmreal = document.getElementById("account-confirm-pass");
  const oldUserPassword = document.getElementById("account-oldpass");
  var passwordChangeState = true;

  function checkProfilePassword() {
    let passwordValue = passwordreal.value.trim();
    let password2Value = passwordconfirmreal.value.trim();
    let oldUserPasswordValue = oldUserPassword.value.trim();

    if (oldUserPasswordValue.length < 8) {
      setErrorFor(oldUserPassword, "Type the Old Password");
      window.passwordChangeState = false;
    } else {
      setSuccessFor(oldUserPassword);
      window.passwordChangeState = true;
    }

    if (window.passwordChangeState) {
      if (passwordValue.length < 8) {
        setErrorFor(passwordreal, "Password should be more than 8 characters");
        window.passwordChangeState = false;
      } else {
        setSuccessFor(passwordreal);
        window.passwordChangeState = true;
      }
    }

    if (window.passwordChangeState) {
      if (passwordValue !== password2Value) {
        setErrorFor(passwordconfirmreal, "Passwords does not match");
        window.passwordChangeState = false;
      } else {
        setSuccessFor(passwordconfirmreal);
        window.passwordChangeState = true;
      }
    }

    function setErrorFor(input, message) {
      const formControl = input.parentElement;
      const small = formControl.querySelector("small");
      formControl.className = "form-control1 error";
      small.innerText = message;
    }

    function setSuccessFor(input) {
      const formControl = input.parentElement;
      formControl.className = "form-control1 success";
    }
  }

  passwordconfirmreal.addEventListener(
    "keyup",
    function (e) {
      let passwordValue = passwordreal.value.trim();
      let password2Value = passwordconfirmreal.value.trim();

      if (passwordValue.length < 8) {
        setErrorFor(passwordconfirmreal, "Type the Password First");

        window.passwordChangeState = false;
      } else {
        window.passwordChangeState = true;
      }

      if (window.passwordChangeState) {
        console.log(passwordValue, password2Value);

        if (passwordValue !== password2Value) {
          setErrorFor(passwordconfirmreal, "Passwords does not match");
          window.passwordChangeState = false;
        } else {
          setSuccessFor(passwordconfirmreal);
          window.passwordChangeState = true;
        }
      }

      function setErrorFor(input, message) {
        const formControl = input.parentElement;
        const small = formControl.querySelector("small");
        formControl.className = "form-control1 error";
        small.innerText = message;
      }

      function setSuccessFor(input) {
        const formControl = input.parentElement;
        formControl.className = "form-control1 success";
      }
    },
    false
  );

  function checkUserProfileUpdate() {
    let status = true;

    const names = document.getElementById("account-fn");
    const username = document.getElementById("account-ln");
    // const email = document.getElementById('userSignUpemail');
    const password = document.getElementById("account-pass");
    const password2 = document.getElementById("account-confirm-pass");
    // const phoneNumber = document.getElementById('userSignUpphoneNumber');

    checkInputs();

    function checkInputs() {
      // trim to remove the whitespaces
      const nameValue = names.value.trim();
      const usernameValue = username.value.trim();
      // const emailValue = email.value.trim();
      const passwordValue = password.value.trim();
      const password2Value = password2.value.trim();
      // const phoneNumberValue = phoneNumber.value.trim();
      // const phoneNumberLength = phoneNumber.value.length

      if (!isName(nameValue)) {
        setErrorFor(names, "Numbers is not allowed");
        status = false;
      } else {
        setSuccessFor(names);
      }

      if (!isName(usernameValue)) {
        setErrorFor(username, "Numbers is not allowed");
        status = false;
      } else {
        setSuccessFor(username);
      }

      // if(status){

      //   if(emailValue === '') {
      //     setErrorFor(email, 'Email cannot be blank');
      //     status = false ;
      //   } else if (!isEmail(emailValue)) {
      //     setErrorFor(email, 'Not a valid email');
      //     status = false ;
      //   } else {
      //     setSuccessFor(email);

      //   }
      // }

      //    if(passwordValue==''){

      //     setSuccessFor(password);
      //    }else if(passwordValue.length<8){
      //         setErrorFor(password, 'Password should be more than 8 characters');
      //     status = false ;
      //     }
      //     else{
      //         setSuccessFor(password);
      //     }

      //  if(passwordValue !== password2Value) {
      //     setErrorFor(password2, 'Passwords does not match');
      //     status = false ;
      //   } else{
      //     setSuccessFor(password2);

      //   }

      // if(status){

      //   if(phoneNumberValue === '') {
      //   setErrorFor(phoneNumber, 'Phone-Number cannot be blank');
      //   status = false
      // } else if (phoneNumberLength>10 || phoneNumberLength<10) {
      //   setErrorFor(phoneNumber, 'This service is only available on India');
      //   status = false
      // } else {
      //   setSuccessFor(phoneNumber);

      // }
      // }
    }

    function setErrorFor(input, message) {
      const formControl = input.parentElement;
      const small = formControl.querySelector("small");
      formControl.className = "form-control1 error";
      small.innerText = message;
    }

    function setSuccessFor(input) {
      const formControl = input.parentElement;
      formControl.className = "form-control1 success";
    }
    function isName(name) {
      return /^[a-z A-Z]+$/.test(name);
    }
    // function isEmail(email) {
    // 	return /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(email);
    // }

    return status;
  }

  async function userProfilePasswordUpdateButton() {
    checkProfilePassword();

    if (passwordChangeState) {
      $.ajax({
        url: "/homepage/user_profile_update",
        data: $("#userProfilePasswordUpdateForm").serialize(),
        method: "PATCH",
        success: (response) => {
          if (response.state) {
            var options = {
              closeButton: true,
              debug: false,
              newestOnTop: false,
              progressBar: true,
              positionClass: "toast-bottom-center",
              preventDuplicates: false,
              showDuration: "300",
              hideDuration: "1000",
              timeOut: "1000",
              extendedTimeOut: "1000",
              showEasing: "swing",
              hideEasing: "linear",
              showMethod: "fadeIn",
              hideMethod: "fadeOut",
              onHidden: function () {
                window.location.reload();
              },
            };

            toastr.success("Password Updated", "Success", options);
          } else {
            toastr.error("Wrong Password", "Error");
          }
        },
      });
    } else {
      toastr.error("Fill The Form Properly", "Error");
      return false;
    }
  }

  function userProfileUpdateButton() {
    let status = checkUserProfileUpdate();

    if (status) {
      $.ajax({
        url: "/homepage/user_profile_update",
        data: $("#userProfileUpdateForm").serialize(),
        method: "PATCH",
        success: (response) => {
          if (response.state) {
            var options = {
              closeButton: true,
              debug: false,
              newestOnTop: false,
              progressBar: true,
              positionClass: "toast-bottom-center",
              preventDuplicates: false,
              showDuration: "300",
              hideDuration: "1000",
              timeOut: "1000",
              extendedTimeOut: "1000",
              showEasing: "swing",
              hideEasing: "linear",
              showMethod: "fadeIn",
              hideMethod: "fadeOut",
              onHidden: function () {
                window.location.reload();
              },
            };

            toastr.success("Profile Updated", "Success", options);
          } else {
          }
        },
      });
    } else {
      toastr.error("Fill the Form Properly", "Error");
      return false;
    }
  }
</script>
